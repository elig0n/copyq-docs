# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Lukas Holecek
# This file is distributed under the same license as the CopyQ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CopyQ \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-06-07 14:49+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../text-encoding.rst:2
msgid "Text Encoding"
msgstr ""

#: ../../text-encoding.rst:4
msgid ""
"This page serves as concept for adding additional CopyQ command line "
"switch to print and read texts in UTF-8 (i.e. without using system "
"encoding)."
msgstr ""

#: ../../text-encoding.rst:8
msgid ""
"Every time the bytes are read from a command (standard output or "
"arguments from client) the input is expected to be either just series of "
"bytes or text in system encoding (possibly Latin1 on Windows). But "
"texts/strings in CopyQ and in clipboard are UTF-8 formatted (except some "
"MIME types with specified encoding)."
msgstr ""

#: ../../text-encoding.rst:14
msgid ""
"When reading system-encoded text (MIME starts with \"text/\") CopyQ re-"
"encodes the data from system encoding to UTF-8. That's not a problem if "
"the received data is really in system encoding. But if you send data from"
" Perl with the UTF-8 switch, CopyQ must also know that UTF-8 is used "
"instead of system encoding."
msgstr ""

#: ../../text-encoding.rst:20
msgid ""
"The same goes for other way. CopyQ sends texts back to client or to a "
"command in system encoding so it needs to convert these texts from UTF-8."
msgstr ""

#: ../../text-encoding.rst:24
msgid ""
"As for the re-encoding part, Qt 5 does nice job transforming characters "
"from UTF-8 but of course for lot of characters in UTF-8 there is no "
"alternative in Latin1 and other encodings."
msgstr ""

